extensions:
  - addsTo:
      pack: codeql/java-queries
      extensible: sinkModel
    data:
      - ["org.apache.kafka.common.record", "FileRecords", true, "open", "(File)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.common.record", "FileRecords", true, "open", "(File,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.common.record", "FileRecords", true, "open", "(File,boolean,boolean,int,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.common.record", "FileRecords", true, "open", "(File,boolean,int,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.common.record", "FileRecords", true, "renameTo", "(File)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.common.utils", "ChildFirstClassLoader", true, "ChildFirstClassLoader", "(String,ClassLoader)", "", "Argument[0]", "open-url", "generated"]
      - ["org.apache.kafka.common.utils", "Utils", false, "atomicMoveWithFallback", "(Path,Path)", "", "Argument[1]", "create-file", "generated"]
      - ["org.apache.kafka.common.utils", "Utils", false, "atomicMoveWithFallback", "(Path,Path,boolean)", "", "Argument[1]", "create-file", "generated"]
      - ["org.apache.kafka.connect.connector", "Task", true, "start", "(Map)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.connect.runtime.isolation", "PluginClassLoader", true, "PluginClassLoader", "(URL,URL[])", "", "Argument[1]", "open-url", "generated"]
      - ["org.apache.kafka.connect.runtime.isolation", "PluginClassLoader", true, "PluginClassLoader", "(URL,URL[],ClassLoader)", "", "Argument[1]", "open-url", "generated"]
      - ["org.apache.kafka.message", "MessageGenerator", false, "processDirectories", "(String,String,String,List,List)", "", "Argument[1]", "create-file", "generated"]
      - ["org.apache.kafka.metadata.bootstrap", "BootstrapDirectory", true, "read", "()", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.metadata.bootstrap", "BootstrapDirectory", true, "writeBinaryFile", "(BootstrapMetadata)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.metadata.util", "BatchFileReader$Builder", true, "build", "()", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.raft", "QuorumStateStore", true, "writeElectionState", "(ElectionState)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.server.common", "CheckpointFile", true, "CheckpointFile", "(File,int,EntryFormatter)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.server.common", "CheckpointFile", true, "write", "(Collection)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.server.log.remote.metadata.storage", "FileBasedRemoteLogMetadataCache", true, "FileBasedRemoteLogMetadataCache", "(TopicIdPartition,Path)", "", "Argument[1]", "create-file", "generated"]
      - ["org.apache.kafka.server.log.remote.metadata.storage", "FileBasedRemoteLogMetadataCache", true, "FileBasedRemoteLogMetadataCache", "(TopicIdPartition,Path)", "", "Argument[1]", "read-file", "generated"]
      - ["org.apache.kafka.server.log.remote.metadata.storage", "RemoteLogMetadataSnapshotFile", true, "read", "()", "", "Argument[-1]", "read-file", "generated"]
      - ["org.apache.kafka.server.log.remote.metadata.storage", "RemoteLogMetadataSnapshotFile", true, "write", "(Snapshot)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.snapshot", "FileRawSnapshotReader", false, "open", "(Path,OffsetAndEpoch)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.snapshot", "FileRawSnapshotWriter", false, "create", "(Path,OffsetAndEpoch,Optional)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.snapshot", "Snapshots", false, "createTempFile", "(Path,OffsetAndEpoch)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.checkpoint", "CheckpointFileWithFailureHandler", true, "CheckpointFileWithFailureHandler", "(File,int,EntryFormatter,LogDirFailureChannel,String)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.checkpoint", "LeaderEpochCheckpointFile", true, "LeaderEpochCheckpointFile", "(File,LogDirFailureChannel)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "AbstractIndex", true, "AbstractIndex", "(File,long,int,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "AbstractIndex", true, "renameTo", "(File)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "AbstractIndex", true, "resize", "(int)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "LazyIndex", true, "renameTo", "(File)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "OffsetIndex", true, "OffsetIndex", "(File,long)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "OffsetIndex", true, "OffsetIndex", "(File,long,int)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "OffsetIndex", true, "OffsetIndex", "(File,long,int,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "SnapshotFile", true, "renameTo", "(String)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "TimeIndex", true, "TimeIndex", "(File,long,int)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "TimeIndex", true, "TimeIndex", "(File,long,int,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.storage.internals.log", "TransactionIndex", true, "renameTo", "(File)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.streams.kstream", "Printed", true, "toFile", "(String)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.streams.state.internals", "OffsetCheckpoint", true, "write", "(Map)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.streams.state.internals", "RocksDBStore", true, "openDB", "(Map,File)", "", "Argument[1]", "create-file", "generated"]
      - ["org.apache.kafka.trogdor.fault", "Kibosh$KiboshControlFile", true, "write", "(Path)", "", "Argument[0]", "create-file", "generated"]
      - ["org.apache.kafka.trogdor.rest", "JsonRestServer", true, "httpRequest", "(Logger,String,String,Object,TypeReference)", "", "Argument[1]", "open-url", "generated"]
      - ["org.apache.kafka.trogdor.rest", "JsonRestServer", true, "httpRequest", "(Logger,String,String,Object,TypeReference,int)", "", "Argument[1]", "open-url", "generated"]
      - ["org.apache.kafka.trogdor.rest", "JsonRestServer", true, "httpRequest", "(String,String,Object,TypeReference,int)", "", "Argument[0]", "open-url", "generated"]
      - ["org.apache.kafka.trogdor.task", "TaskWorker", true, "start", "(Platform,WorkerStatusTracker,KafkaFutureImpl)", "", "Argument[-1]", "create-file", "generated"]
      - ["org.apache.kafka.trogdor.task", "TaskWorker", true, "stop", "(Platform)", "", "Argument[-1]", "create-file", "generated"]

  - addsTo:
      pack: codeql/java-queries
      extensible: sourceModel
    data:
      - ["org.apache.kafka.common.security.oauthbearer.internals.secured", "HttpAccessTokenRetriever", true, "post", "(HttpURLConnection,Map,String,Integer,Integer)", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.common.security.oauthbearer.internals.secured", "Retry", true, "execute", "(Retryable)", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.trogdor.agent", "AgentClient", true, "status", "()", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.trogdor.agent", "AgentClient", true, "uptime", "()", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.trogdor.coordinator", "CoordinatorClient", true, "status", "()", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.trogdor.coordinator", "CoordinatorClient", true, "task", "(TaskRequest)", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.trogdor.coordinator", "CoordinatorClient", true, "tasks", "(TasksRequest)", "", "ReturnValue", "remote", "generated"]
      - ["org.apache.kafka.trogdor.coordinator", "CoordinatorClient", true, "uptime", "()", "", "ReturnValue", "remote", "generated"]

