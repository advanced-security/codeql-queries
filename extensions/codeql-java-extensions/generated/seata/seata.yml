extensions:
  - addsTo:
      pack: codeql/java-queries
      extensible: sinkModel
    data:
      - ["io.seata.config.file", "YamlFileConfig", true, "YamlFileConfig", "(File,String)", "", "Argument[0]", "read-file", "generated"]
      - ["io.seata.core.store", "LockStore", true, "acquireLock", "(List,boolean,boolean)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LockStore", true, "unLock", "(List)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LockStore", true, "unLock", "(Long)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LockStore", true, "unLock", "(String)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LockStore", true, "updateLockStatus", "(String,LockStatus)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "deleteBranchTransactionDO", "(BranchTransactionDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "deleteGlobalTransactionDO", "(GlobalTransactionDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "getCurrentMaxSessionId", "(long,long)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "insertBranchTransactionDO", "(BranchTransactionDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "insertGlobalTransactionDO", "(GlobalTransactionDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "queryBranchTransactionDO", "(List)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "queryBranchTransactionDO", "(String)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "queryGlobalTransactionDO", "(String)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "queryGlobalTransactionDO", "(int[],int)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "queryGlobalTransactionDO", "(long)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "updateBranchTransactionDO", "(BranchTransactionDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.core.store", "LogStore", true, "updateGlobalTransactionDO", "(GlobalTransactionDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.http", "HttpExecutor", true, "executePost", "(String,String,Object,Class)", "", "Argument[0]", "open-url", "generated"]
      - ["io.seata.integration.http", "HttpExecutor", true, "executePost", "(String,String,Object,Class)", "", "Argument[1]", "open-url", "generated"]
      - ["io.seata.integration.http", "HttpExecutor", true, "executePut", "(String,String,Object,Class)", "", "Argument[0]", "open-url", "generated"]
      - ["io.seata.integration.http", "HttpExecutor", true, "executePut", "(String,String,Object,Class)", "", "Argument[1]", "open-url", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "deleteCommonFenceDO", "(Connection,String,Long)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "deleteCommonFenceDOByDate", "(Connection,Date)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "deleteTCCFenceDO", "(Connection,List)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "insertCommonFenceDO", "(Connection,CommonFenceDO)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "queryCommonFenceDO", "(Connection,String,Long)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "queryEndStatusXidsByDate", "(Connection,Date,int)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.integration.tx.api.fence.store", "CommonFenceStore", true, "updateCommonFenceDO", "(Connection,String,Long,int,int)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.rm.datasource.exec.mysql", "MySQLInsertOnDuplicateUpdateExecutor", true, "buildTableRecords2", "(TableMeta,String,ArrayList,List)", "", "Argument[1]", "sql", "generated"]
      - ["io.seata.rm.datasource.exec", "ExecuteTemplate", true, "execute", "(List,StatementProxy,StatementCallback,Object[])", "", "Argument[3]", "sql", "generated"]
      - ["io.seata.rm.datasource.exec", "ExecuteTemplate", true, "execute", "(StatementProxy,StatementCallback,Object[])", "", "Argument[2]", "sql", "generated"]
      - ["io.seata.rm.datasource.xa", "ExecuteTemplateXA", true, "execute", "(AbstractConnectionProxyXA,StatementCallback,Statement,Object[])", "", "Argument[3]", "sql", "generated"]
      - ["io.seata.server.console.service", "BranchSessionService", true, "queryByXid", "(String)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.server.console.service", "GlobalLockService", true, "query", "(GlobalLockParam)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.server.console.service", "GlobalSessionService", true, "query", "(GlobalSessionParam)", "", "Argument[-1]", "sql", "generated"]
      - ["io.seata.server.storage.file.session", "FileSessionManager", true, "FileSessionManager", "(String,String)", "", "Argument[0]", "create-file", "generated"]
      - ["io.seata.server.storage.file.store", "FileTransactionStoreManager", true, "FileTransactionStoreManager", "(String,SessionManager)", "", "Argument[0]", "create-file", "generated"]
      - ["io.seata.server.storage.file", "ReloadableStore", true, "hasRemaining", "(boolean)", "", "Argument[-1]", "create-file", "generated"]
      - ["io.seata.server.storage.file", "ReloadableStore", true, "readWriteStore", "(int,boolean)", "", "Argument[-1]", "create-file", "generated"]
      - ["io.seata.server.storage.redis", "LuaParser", true, "getEvalShaMapFromFile", "(String)", "", "Argument[0]", "read-file", "generated"]

