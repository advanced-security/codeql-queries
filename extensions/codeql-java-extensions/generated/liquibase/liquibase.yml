extensions:
  - addsTo:
      pack: codeql/java-queries
      extensible: sinkModel
    data:
      - ["liquibase.changelog", "ChangeLogHistoryService", true, "getRanChangeSets", "()", "", "Argument[-1]", "create-file", "generated"]
      - ["liquibase.changelog", "ChangeLogHistoryService", true, "init", "()", "", "Argument[-1]", "create-file", "generated"]
      - ["liquibase.changelog", "ChangeSet", true, "lookupExecutor", "(String)", "", "Argument[0]", "jndi-injection", "generated"]
      - ["liquibase.command.core", "RegisterChangelogCommandStep", true, "doRegisterChangelog", "(String,UUID,String,CommandResultsBuilder,boolean)", "", "Argument[1]", "open-url", "generated"]
      - ["liquibase.configuration", "ConfigurationContainer", true, "getValue", "(String,Class)", "", "Argument[-1]", "jndi-injection", "generated"]
      - ["liquibase.configuration", "ConfigurationContainer", true, "getValue", "(String,Class)", "", "Argument[0]", "jndi-injection", "generated"]
      - ["liquibase.configuration", "ConfigurationValueProvider", true, "getProvidedValue", "(String[])", "", "Argument[0]", "jndi-injection", "generated"]
      - ["liquibase.configuration", "LiquibaseConfiguration", true, "getCurrentConfiguredValue", "(ConfigurationValueConverter,ConfigurationValueObfuscator,ConfigurationValueProvider[],String[])", "", "Argument[3]", "jndi-injection", "generated"]
      - ["liquibase.configuration", "LiquibaseConfiguration", true, "getCurrentConfiguredValue", "(ConfigurationValueConverter,ConfigurationValueObfuscator,String[])", "", "Argument[2]", "jndi-injection", "generated"]
      - ["liquibase.database.core", "SQLiteDatabase", true, "getAlterTableSqls", "(Database,AlterTableVisitor,String,String,String)", "", "Argument[4]", "sql", "generated"]
      - ["liquibase.database.core", "SQLiteDatabase", true, "getAlterTableStatements", "(AlterTableVisitor,Database,String,String,String)", "", "Argument[4]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareCall", "(String)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareCall", "(String,int,int)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareCall", "(String,int,int,int)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareStatement", "(String)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareStatement", "(String,String[])", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareStatement", "(String,int)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareStatement", "(String,int,int)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareStatement", "(String,int,int,int)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database.jvm", "JdbcConnection", true, "prepareStatement", "(String,int[])", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.database", "ConnectionServiceFactory", true, "create", "(String,Driver,Properties)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "Database", true, "getViewDefinition", "(CatalogAndSchema,String)", "", "Argument[1]", "sql", "generated"]
      - ["liquibase.database", "DatabaseConnection", true, "open", "(String,Driver,Properties)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openConnection", "(String,String,String,String,Properties,ResourceAccessor)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openConnection", "(String,String,String,String,ResourceAccessor)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openConnection", "(String,String,String,String,String,String,String,ResourceAccessor)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openDatabase", "(String,String,String,String,Properties,ResourceAccessor)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openDatabase", "(String,String,String,String,Properties,ResourceAccessor)", "", "Argument[1]", "sql", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openDatabase", "(String,String,String,String,ResourceAccessor)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openDatabase", "(String,String,String,String,ResourceAccessor)", "", "Argument[1]", "sql", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openDatabase", "(String,String,String,String,String,String,String,ResourceAccessor)", "", "Argument[0]", "jdbc-url", "generated"]
      - ["liquibase.database", "DatabaseFactory", true, "openDatabase", "(String,String,String,String,String,String,String,ResourceAccessor)", "", "Argument[1]", "sql", "generated"]
      - ["liquibase.database", "PreparedStatementFactory", false, "create", "(String)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.diff.output.changelog", "MissingObjectChangeGenerator", true, "fixMissing", "(DatabaseObject,DiffOutputControl,Database,Database,ChangeGeneratorChain)", "", "Argument[-1]", "create-file", "generated"]
      - ["liquibase.extension.testing.setup", "TestSetupEnvironment", true, "TestSetupEnvironment", "(DatabaseTestSystem,DatabaseTestSystem)", "", "Argument[-1]", "jdbc-url", "generated"]
      - ["liquibase.extension.testing.testsystem", "DatabaseTestSystem", true, "executeSql", "(String)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.extension.testing.testsystem", "TestSystem", true, "getConfiguredValue", "(String,Class)", "", "Argument[0]", "jndi-injection", "generated"]
      - ["liquibase.extension.testing.testsystem", "TestSystem", true, "getConfiguredValue", "(String,Class,boolean)", "", "Argument[0]", "jndi-injection", "generated"]
      - ["liquibase.extension.testing.testsystem", "TestSystem", true, "getConfiguredValue", "(String,ConfigurationValueConverter,boolean)", "", "Argument[0]", "jndi-injection", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String)", "", "Argument[0]", "create-file", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String)", "", "Argument[0]", "open-url", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String,String,String)", "", "Argument[0]", "create-file", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String,String,String)", "", "Argument[0]", "open-url", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String,String,String)", "", "Argument[1]", "create-file", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String,String,String)", "", "Argument[1]", "open-url", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String,String,String)", "", "Argument[2]", "create-file", "generated"]
      - ["liquibase.extension.testing.util", "DownloadUtil", true, "downloadMavenArtifact", "(String,String,String)", "", "Argument[2]", "open-url", "generated"]
      - ["liquibase.hub", "HubService", true, "getHubChangeLog", "(UUID)", "", "Argument[0]", "open-url", "generated"]
      - ["liquibase.hub", "HubService", true, "getHubChangeLog", "(UUID,String)", "", "Argument[0]", "open-url", "generated"]
      - ["liquibase.hub", "HubService", true, "getProject", "(UUID)", "", "Argument[0]", "open-url", "generated"]
      - ["liquibase.hub", "HubService", true, "sendOperationEvent", "(Operation,OperationEvent,UUID)", "", "Argument[2]", "open-url", "generated"]
      - ["liquibase.integration.commandline", "CommandLineUtils", true, "createDatabaseObject", "(ClassLoader,String,String,String,String,String,String,boolean,boolean,String,String,String,String,String,String,String)", "", "Argument[1]", "jdbc-url", "generated"]
      - ["liquibase.integration.commandline", "CommandLineUtils", true, "createDatabaseObject", "(ClassLoader,String,String,String,String,String,String,boolean,boolean,String,String,String,String,String,String,String)", "", "Argument[2]", "sql", "generated"]
      - ["liquibase.integration.commandline", "CommandLineUtils", true, "createDatabaseObject", "(ResourceAccessor,String,String,String,String,String,String,boolean,boolean,String,String,String,String,String,String,String)", "", "Argument[1]", "jdbc-url", "generated"]
      - ["liquibase.integration.commandline", "CommandLineUtils", true, "createDatabaseObject", "(ResourceAccessor,String,String,String,String,String,String,boolean,boolean,String,String,String,String,String,String,String)", "", "Argument[2]", "sql", "generated"]
      - ["liquibase.resource", "PathHandler", true, "createResource", "(String)", "", "Argument[0]", "create-file", "generated"]
      - ["liquibase.resource", "PathHandlerFactory", true, "createResource", "(String)", "", "Argument[0]", "create-file", "generated"]
      - ["liquibase.resource", "PathHandlerFactory", true, "openResourceOutputStream", "(String,OpenOptions)", "", "Argument[0]", "create-file", "generated"]
      - ["liquibase.resource", "PathHandlerFactory", true, "openResourceOutputStream", "(String,boolean)", "", "Argument[0]", "create-file", "generated"]
      - ["liquibase.resource", "Resource", true, "openOutputStream", "(OpenOptions)", "", "Argument[-1]", "create-file", "generated"]
      - ["liquibase.serializer", "ChangeLogSerializer", true, "append", "(ChangeSet,File)", "", "Argument[1]", "create-file", "generated"]
      - ["liquibase.snapshot.jvm", "ColumnAutoIncrementService", true, "enableColumnAutoIncrementIfAvailable", "(Column,Database,CachedRow,String,String,String,String)", "", "Argument[3]", "sql", "generated"]
      - ["liquibase.snapshot.jvm", "ColumnAutoIncrementService", true, "enableColumnAutoIncrementIfAvailable", "(Column,Database,CachedRow,String,String,String,String)", "", "Argument[4]", "sql", "generated"]
      - ["liquibase.snapshot.jvm", "ColumnAutoIncrementService", true, "enableColumnAutoIncrementIfAvailable", "(Column,Database,CachedRow,String,String,String,String)", "", "Argument[5]", "sql", "generated"]
      - ["liquibase.snapshot.jvm", "ColumnAutoIncrementService", true, "enableColumnAutoIncrementIfAvailable", "(Column,Database,CachedRow,String,String,String,String)", "", "Argument[6]", "sql", "generated"]
      - ["liquibase.snapshot", "JdbcDatabaseSnapshot$CachingDatabaseMetaData", true, "getColumns", "(String,String,String,String)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.snapshot", "JdbcDatabaseSnapshot$CachingDatabaseMetaData", true, "getColumns", "(String,String,String,String)", "", "Argument[1]", "sql", "generated"]
      - ["liquibase.snapshot", "JdbcDatabaseSnapshot$CachingDatabaseMetaData", true, "getColumns", "(String,String,String,String)", "", "Argument[2]", "sql", "generated"]
      - ["liquibase.snapshot", "JdbcDatabaseSnapshot$CachingDatabaseMetaData", true, "getColumns", "(String,String,String,String)", "", "Argument[3]", "sql", "generated"]
      - ["liquibase.snapshot", "JdbcDatabaseSnapshot$CachingDatabaseMetaData", true, "getForeignKeys", "(String,String,String,String)", "", "Argument[2]", "sql", "generated"]
      - ["liquibase.snapshot", "JdbcDatabaseSnapshot$CachingDatabaseMetaData", true, "getNotNullConst", "(String,String,String)", "", "Argument[2]", "sql", "generated"]
      - ["liquibase.snapshot", "ResultSetCache$ResultSetExtractor", true, "bulkFetch", "()", "", "Argument[-1]", "sql", "generated"]
      - ["liquibase.snapshot", "ResultSetCache$ResultSetExtractor", true, "executeAndExtract", "(String,Database)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.snapshot", "ResultSetCache$ResultSetExtractor", true, "executeAndExtract", "(String,Database,boolean)", "", "Argument[0]", "sql", "generated"]
      - ["liquibase.snapshot", "ResultSetCache$ResultSetExtractor", true, "fastFetch", "()", "", "Argument[-1]", "sql", "generated"]
      - ["liquibase.snapshot", "ResultSetCache$SingleResultSetExtractor", true, "fastFetchQuery", "()", "", "Argument[-1]", "sql", "generated"]
      - ["liquibase.util", "FileUtil", true, "write", "(String,File)", "", "Argument[1]", "create-file", "generated"]
      - ["liquibase.util", "FileUtil", true, "write", "(String,File,boolean)", "", "Argument[1]", "create-file", "generated"]

  - addsTo:
      pack: codeql/java-queries
      extensible: sourceModel
    data:
      - ["liquibase.integration.servlet", "GenericServletWrapper$HttpServletRequest", true, "getParameter", "(String)", "", "ReturnValue", "remote", "generated"]
      - ["liquibase.integration.servlet", "GenericServletWrapper$HttpServletRequest", true, "getRequestURI", "()", "", "ReturnValue", "remote", "generated"]

