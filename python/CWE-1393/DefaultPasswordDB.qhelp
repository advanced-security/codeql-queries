<!DOCTYPE qhelp PUBLIC
"-//Semmle//qhelp//EN"
"qhelp.dtd">
<qhelp>
	<overview>
		<p>
		Default passwords are often used to simplify setup of single-user systems, or even multi-user systems.
		
		For single-user systems they expose users to attackers who are well aware of the default password. They may use it in mass attacks on websites or may target the product more precisely and then look up the default.

		In multi-user systems with default passwords, any user that has an account created knows the starting password for every other user. Even if a password change method is provided, there is a time window during which users may authenticate to others' accounts.
		</p>
	</overview>
	<recommendation>
		<p>
		Remove the default for the password.
		</p>
	</recommendation>
	<example>
		<p>
		In this insecure snippet of Python, a password column has a default password set:
		</p>
		<sample language="python">
from flask import Flask
from flask_login import UserMixin
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
db = SQLAlchemy(app)

class User(db.Model, UserMixin):
    __tablename__ = 'users'
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(80), server_default="password", nullable=False)

	...
</sample>
		<p>
		In this example, no default is provided, so the user must set their own password:
		</p>
		<sample language="python">
from flask import Flask
from flask_login import UserMixin
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
db = SQLAlchemy(app)

class SecureUser(db.Model, UserMixin):
    __tablename__ = 'secure_users'
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(80), nullable=False)

	...
</sample>
	</example>

</qhelp>
